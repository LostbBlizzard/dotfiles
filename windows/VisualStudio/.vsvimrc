set number
set relativenumber

nnoremap <C-d> <C-d>zz
nnoremap <C-u> <C-u>zz

nnoremap <C-f> <C-f>zz
nnoremap <C-b> <C-b>zz

nnoremap n nzzzv
nnoremap N Nzzzv

let mapleader = " "

nnoremap <leader>A :vsc File.CloseAllButThis<cr>

nnoremap <leader>pv :vsc view.SolutionExplorer<cr>
nnoremap <leader>sl :vsc Edit.GoToFile<cr>
nnoremap <leader>sd :vsc View.ErrorList<cr>
nnoremap <leader>sg :vsc Edit.FindInFiles<cr>
nnoremap <leader>ws :vsc Edit.GoToSymbol<cr>

nnoremap gr :vsc Edit.FindAllReferences<cr>
nnoremap gD :vsc Edit.GoToDefinition<cr>

nnoremap <leader>ca :vsc Edit.CodeActions<cr>

nnoremap <leader>rn :vsc Refactor.Rename<cr>

nnoremap <leader>g :vsc view.Terminal<cr>

nnoremap <leader>dq :vsc Build.Cancel<cr>

nnoremap K :vsc Edit.QuickInfo<cr>

nnoremap <leader>j :vsc Window.PreviousTab<cr>
nnoremap <leader>k :vsc Window.NextTab<cr>

nnoremap <leader>dl :vsc Debug.Start<cr>
nnoremap <leader>dx :vsc Debug.StopDebugging<cr>

nnoremap <leader>dj :vsc Debug.ToggleBreakpoint<cr>
nnoremap <leader>du :vsc Debug.EditBreakpoint<cr>
nnoremap <leader>di :vsc Debug.StepOver<cr>
nnoremap <leader>do :vsc Debug.StepInto<cr>
nnoremap <leader>dh :vsc Debug.StepOut<cr>
nnoremap <leader>dc :vsc Debug.RunToCursor<cr>
nnoremap <leader>dk :vsc Debug.QuickWatch<cr>
nnoremap <leader>dy :vsc Debug.SetNextStatement<cr>
nnoremap <leader>dr :vsc Debug.ReattachtoProcess<cr>

nnoremap <leader>ds :vsc Debug.CallStack<cr>
nnoremap <leader>db :vsc Debug.Breakpoints<cr>
nnoremap <leader>da :vsc Debug.Autos<cr>

xnoremap <leader>p "_dP
nnoremap <leader>y "+y
vnoremap <leader>y "+y
nnoremap <leader>Y "+Y
vnoremap <leader>d "_d
nnoremap <leader>d "_d

map Y y$

nnoremap y_ v_y
nnoremap d_ v_d
nnoremap c_ v_c
